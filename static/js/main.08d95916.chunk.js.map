{"version":3,"sources":["components/Header.js","components/KegControl/KegDetails.js","components/KegControl/Keg.js","components/KegControl/KegList.js","components/KegControl/ReusableForm.js","components/KegControl/NewKegForm.js","components/KegControl/EditKegForm.js","components/KegControl/KegControl.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","textAlign","color","Header","classes","className","maxWidth","marginLeft","marginRight","marginBottom","marginTop","borderRadius","width","height","backgroundColor","boxShadow","KegDetails","props","keg","onClickingDelete","onClickingOrder","iconButtonStyle","margin","orderButton","IconButton","style","onClick","id","pintsRemaing","Typography","variant","component","price","remainingPints","disabled","Fragment","Card","CardHeader","title","name","subheader","brand","CardContent","alcoholContent","onClickingEdit","aria-label","Keg","cardContent","CardActionArea","whenKegClicked","flexGrow","KegList","Grid","container","spacing","kegList","map","item","onKegSelection","key","padding","display","flexWrap","textField","ReusableForm","buttonText","onSubmit","formSubmissionHandler","TextField","type","label","fullWidth","Button","NewKegForm","event","preventDefault","onNewKegCreation","target","value","v4","EditKegForm","onEditKeg","KegControl","handleAddingNewKegToList","newKeg","newMasterKegList","state","masterKegList","concat","setState","formVisibleOnPage","handleEditClick","console","log","editing","handleEditingKegInList","kegToEdit","editedMasterKegList","filter","selectedKeg","handleOrderingPint","updatedPints","updatedKeg","handleQuickOrder","handleChangingSelectedKeg","handleDeletingKeg","handleClick","prevState","description","currentlyVisibleState","buttonIcon","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.08d95916.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    color: 'rgb(45,45,45,0.6)'\n  },\n}));\n\nfunction Header(){\n  const classes = useStyles();\n\n  return (\n      <h1 className={classes.root}>neumorphic tap toom</h1>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport Clear from '@material-ui/icons/Clear';\nimport Create from '@material-ui/icons/Create';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom:100,\n    marginTop:50,\n    borderRadius:4,\n    width: 300,\n    height: \"auto\",\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n  }\n}));\n\nfunction KegDetails(props) {\n  const { keg, onClickingDelete, onClickingOrder } = props;\n  const classes = useStyles();\n  const iconButtonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"#e53935\"\n  }\n  const iconButtonStyleDisabled = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"rgb(163,177,198,0.6)\"\n  }\n  let orderButton = <IconButton \n    style={iconButtonStyle} \n    onClick={()=> onClickingOrder(keg.id)}>\n      <AttachMoney />\n    </IconButton>;\n  let pintsRemaing = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      ${keg.price}.00 PER PINT\n    </Typography>\n  if (keg.remainingPints === 0) {\n    orderButton = <IconButton \n      style={iconButtonStyleDisabled} \n      disabled\n      onClick={()=> onClickingOrder(keg.id)}>\n        <AttachMoney />\n      </IconButton>;\n    pintsRemaing = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    SOLD OUT\n  </Typography>;\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader\n          title={keg.name}\n          subheader={keg.brand}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {keg.alcoholContent} ALCOHOL CONTENT\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {keg.remainingPints} REMAINING PINTS\n          </Typography>\n          {pintsRemaing}\n        </CardContent>\n          {orderButton}\n          <IconButton style={iconButtonStyle} onClick={ props.onClickingEdit } aria-label=\"share\">\n            <Create />\n          </IconButton>\n          <IconButton style={iconButtonStyle} onClick={()=> onClickingDelete(keg.id) }aria-label=\"share\">\n            <Clear />\n          </IconButton>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\nKegDetails.propTypes = {\n  keg: PropTypes.object,\n  onClickingOrder: PropTypes.func,\n  onClickingEdit: PropTypes.func,\n  onClickingDelete: PropTypes.func\n};\n\nexport default KegDetails;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport List from '@material-ui/icons/List';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: 'rgb(45,45,45,0.6)',\n    maxWidth: 345,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop:50,\n    borderRadius:4,\n    width:150,\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n  }\n}));\n\nfunction Keg(props) {\n  const classes = useStyles();\n  const iconButtonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"#e53935\"\n  }\n  const iconButtonStyleDisabled = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"rgb(163,177,198,0.6)\"\n  }\n  let orderButton = <IconButton \n    style={iconButtonStyle} \n    onClick={()=> props.onClickingOrder(props.id, props.remainingPints)}>\n      <AttachMoney />\n    </IconButton>;\n  let cardContent = <CardContent>{props.remainingPints} pints left</CardContent>;\n  if (props.remainingPints === 0) {\n    orderButton = <IconButton \n      style={iconButtonStyleDisabled} \n      disabled\n      onClick={()=> props.onClickingOrder(props.id, props.remainingPints)}>\n        <AttachMoney />\n      </IconButton>;\n    cardContent = <CardContent>SOLD OUT!</CardContent>;\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader\n          title={props.name}\n        />\n        {cardContent}\n        <CardActionArea>\n          {orderButton}\n          <IconButton style={iconButtonStyle} onClick={() => props.whenKegClicked(props.id)} >\n            <List />\n          </IconButton>\n        </CardActionArea>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\nKeg.propTypes = {\n  name: PropTypes.string,\n  brand: PropTypes.string,\n  description: PropTypes.string,\n  alcoholContent: PropTypes.string,\n  price: PropTypes.number,\n  remainingPints: PropTypes.number,\n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func,\n  onClickingOrder: PropTypes.func\n};\n\nexport default Keg;","import React from \"react\";\nimport Keg from \"./Keg\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction KegList(props){\n  const classes = useStyles();\n\n  return (\n    <React.Fragment className={classes.root} >\n      <Grid container spacing={2}>\n        {props.kegList.map((keg) =>\n          <Grid item item xs={6} sm={4} md={3} lg={2}>\n            <Keg \n              whenKegClicked = { props.onKegSelection }\n              onClickingOrder = { props.onClickingOrder }\n              name={keg.name}\n              brand={keg.brand}\n              alcoholContent={keg.alcoholContent}\n              remainingPints={keg.remainingPints}\n              id={keg.id}\n              key={keg.id}/>\n          </Grid>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nKegList.propTypes = {\n  keglist: PropTypes.array,\n  onKegSelection: PropTypes.func,\n  onClickingOrder: PropTypes.func\n};\n\nexport default KegList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: 600,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop:50,\n    marginBottom:100,\n    borderRadius:4,\n      /* Basic styling and alignment */\n    /* For Neumorphism Effect */\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n      /* For Neumorphism Effect */\n  },\n  textField: {\n    width: \"auto\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n\n  },\n}));\n\n\nfunction ReusableForm(props) {\n  const classes = useStyles();\n  const buttonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 20\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader title={props.buttonText}>\n        </CardHeader>\n        <form onSubmit= {props.formSubmissionHandler}>\n          <TextField\n            type='text'\n            name='name'\n            label='Beer Name'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            type='text'\n            name='brand'\n            label='Brand'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            type='text'\n            name='description'\n            label='Description'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            id='margin-none' \n            className={classes.textField}\n            type='text'\n            name='alcoholContent'\n            label='Alcohol Content'/>\n          <TextField\n            id='margin-none' \n            className={classes.textField}\n            type='number'\n            name='price'\n            label='Price'/>\n          <br />\n          <Button \n            style={buttonStyle}\n            type=\"submit\">{props.buttonText}\n          </Button>\n        </form>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport { v4 } from 'uuid';\nimport PropTypes from \"prop-types\";\nimport ReusableForm from './ReusableForm';\n\n\nfunction NewKegForm(props) {\n\n  function handleNewKegFormSubmission(event) {\n    event.preventDefault();\n    props.onNewKegCreation({name: event.target.name.value, brand: event.target.brand.value, alcoholContent: event.target.alcoholContent.value, price: event.target.price.value, remainingPints: 124, id: v4()});\n  }\n\n  return(\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewKegFormSubmission}\n        buttonText=\"Add Keg\" />\n    </React.Fragment>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n};\n\nexport default NewKegForm;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from 'prop-types';\n\nfunction EditKegForm (props) {\n\n  function handleEditKegFormSubmission(event) {\n    event.preventDefault();\n    props.onEditKeg({name: event.target.name.value, brand: event.target.brand.value, alcoholContent: event.target.alcoholContent.value, price: event.target.price.value\n    });\n  }\n  return (\n    <React.Fragment>\n      <ReusableForm \n        formSubmissionHandler={handleEditKegFormSubmission}\n        buttonText=\"Update Keg\" />\n    </React.Fragment>\n  );\n}\n\nEditKegForm.propTypes = {\n  onEditKeg: PropTypes.func\n};\n\nexport default EditKegForm;","import React from \"react\";\nimport KegDetails from \"./KegDetails\";\nimport KegList from \"./KegList\";\nimport NewKegForm from \"./NewKegForm\";\nimport EditKegForm from \"./EditKegForm\";\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\n\n\nclass KegControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterKegList: [\n        {\n          name: \"Banana Belgium Ale\",\n          brand: \"Solovewicz Brewing\",\n          description: \"Fruity, but in a canine kind of way.\",\n          alcoholContent: \"4%\",\n          price: 5,\n          remainingPints: 0,\n          key: 1,\n          id: 1\n        },\n        {\n          name: \"Sneaky Sasquatch Stout\",\n          brand: \"Bigfoot Fermentorium\",\n          description: \"Pungent.\",\n          alcoholContent: \"8%\",\n          price: 11,\n          remainingPints: 124,\n          key: 2,\n          id: 2\n        },\n        {\n          name: \"Calvin & Hobbes Pale Ale\",\n          brand: \"Watterson Werks\",\n          description: \"Blonde with notes of childhood.\",\n          alcoholContent: \"5%\",\n          price: 6,\n          remainingPints: 124,\n          key: 3,\n          id: 3\n        },\n        {\n          name: \"Goat Lords Cider\",\n          brand: \"Wild Animal Werks\",\n          description: \"Maaahhhhy favorite cider.\",\n          alcoholContent: \"4%\",\n          price: 5,\n          remainingPints: 124,\n          key: 4,\n          id: 4\n        },\n        {\n          name: \"Dinosaur Double IPA\",\n          brand: \"Limited Edition.  Try it before it goes exctinct.\",\n          description: \"RAWR.\",\n          alcoholContent: \"9%\",\n          price: 8,\n          remainingPints: 124,\n          key: 5,\n          id: 5\n        },\n        {\n          name: \"Mary Poppins Hard Kombucha\",\n          brand: \"Sister Suffragettes, inc.\",\n          description: \"Nearly perfect in every way.\",\n          alcoholContent: \"3%\",\n          price: 7,\n          remainingPints: 124,\n          key: 6,\n          id: 6\n        }\n      ],\n      selectedKeg: null,\n      editing: false\n    };\n  }\n\n  handleAddingNewKegToList = (newKeg) => {\n    const newMasterKegList = this.state.masterKegList.concat(newKeg);\n    this.setState({masterKegList: newMasterKegList});\n    this.setState({formVisibleOnPage: false});\n  }\n\n  handleEditClick = () => {\n    console.log(\"handleEditClick reached!\");\n    this.setState({editing: true});\n  }\n\n  handleEditingKegInList = (kegToEdit) => {\n    const editedMasterKegList = this.state.masterKegList\n      .filter(keg => keg.id !== this.state.selectedKeg.id)\n      .concat(kegToEdit);\n    this.setState({\n        masterKegList: editedMasterKegList,\n        editing: false,\n        selectedKeg: null\n      });\n  }\n\n  handleOrderingPint = (id) => {\n    const selectedKeg = this.state.masterKegList.filter(keg => keg.id ===id)[0];\n    const updatedPints = selectedKeg.remainingPints - 1;\n    const updatedKeg = {...selectedKeg, remainingPints: updatedPints};\n    const kegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({\n      masterKegList: [...kegList, updatedKeg],\n      selectedKeg: updatedKeg\n    });\n  }\n\n  handleQuickOrder = (id) => {\n    const selectedKeg = this.state.masterKegList.filter(keg => keg.id ===id)[0];\n    const updatedPints = selectedKeg.remainingPints - 1;\n    const updatedKeg = {...selectedKeg, remainingPints: updatedPints};\n    const kegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({\n      masterKegList: [...kegList, updatedKeg],\n      selectedKeg: null\n    });\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const selectedKeg = this.state.masterKegList.filter(keg => keg.id ===id)[0];\n    this.setState({selectedKeg: selectedKeg});\n  }\n\n  handleDeletingKeg = (id) => {\n    const newMasterKegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({masterKegList: newMasterKegList});\n    this.setState({selectedKeg: null});\n  }\n\n  handleClick = () => {\n    if (this.state.selectedKeg != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedKeg: null\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage,\n      }));\n    }\n  }\n\n  render() {\n    const styledButton = {\n      color: 'rgb(45,45,45,0.6)',\n      maxWidth: 345,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      borderRadius:4,\n      width:150,\n        /* Basic styling and alignment */\n      /* For Neumorphism Effect */\n      backgroundColor: \"#E0E5EC\",\n      boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n    }\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    let buttonIcon = null;\n\n    if (this.state.editing ) {      \n      currentlyVisibleState = <EditKegForm keg = {this.state.selectedKeg} onEditKeg = {this.handleEditingKegInList} />\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg Details\";\n    } else if (this.state.selectedKeg != null) {\n      currentlyVisibleState = <KegDetails keg = {this.state.selectedKeg} \n      onClickingOrder = {this.handleOrderingPint}\n      onClickingDelete = {this.handleDeletingKeg}\n      onClickingEdit = {this.handleEditClick} />\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg List\";\n    }\n    else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg List\";\n    } else {\n      currentlyVisibleState = <KegList kegList={this.state.masterKegList}\n      onClickingOrder= {this.handleQuickOrder}\n      onKegSelection={this.handleChangingSelectedKeg} />;\n      buttonText = \"Add A Keg\";\n      buttonIcon = <Add />;\n    }\n    return (\n      <React.Fragment>\n        <Button onClick={this.handleClick} style={styledButton}>\n          {buttonIcon}\n          {buttonText}\n        </Button>\n        {currentlyVisibleState}\n      </React.Fragment>\n    );\n  }\n}\n\n\n\nexport default KegControl;","import React from 'react';\nimport '../App.css';\nimport 'rmwc/dist/styles';\nimport Header from \"./Header\";\nimport KegControl from \"./KegControl/KegControl\"\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <KegControl />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}